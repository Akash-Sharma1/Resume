{"version":3,"sources":["logo.svg","Component/TableItem.js","Component/ChooseContestPage.js","Component/ActivityPage.js","Component/Timer.js","Component/ContestPage.js","Component/Topbar.js","Component/ProblemPage.js","Component/SubmitPage.js","Component/LeaderBoardPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TableItem","this","props","itemtype","width","align","className","onClick","PutProblemCode","bind","Problem","problemCode","successfulSubmissions","accuracy","contestCode","type","Activity","username","result","Board","problemScore","ps","map","A","style","color","score","penalty","rank","country","totalTime","totalScore","onMouseOut","changeblack","onMouseOver","changeblue","select_code","code","substring","Length","length","Component","ChooseContestPage","validateContest","isloading_choosepage","document","getElementById","value","i","ContestList","name","removeEventListener","handleKeyDown","PutContestCode","placeholder","codeboxhandler","e","val","target","list","toUpperCase","push","setState","List","event","keyCode","option","preventDefault","max","state","min","a","b","allcontest","isloading_ip","button","id","background","PRBS","P","autoComplete","onChange","addEventListener","ActivityPage","PageType","Url","Contest","ip","console","log","axios","get","then","response","data","doCheck","content","ACTV","overflow","maxHeight","maxWidth","Timer","start_timer","starttime","endtime","Date","getDate","getHours","getMinutes","getSeconds","Finish","Start","Current","innerHTML","timing","setInterval","currentDate","getTime","timeLeft","days","Math","floor","hours","minutes","seconds","clearInterval","Fragment","PureComponent","ContestPage","startDate","endDate","isloading_contest","isParent","Showsidepane","description","children","problemsList","key","heading","Topbar","isloginOK","Logout_info","Logout","Login_info","oauth","ContestPage_info","ChangePage","Leaderboard","ProblemPage_info","isFirst","backbtn","Back","HomePage","ProblemPage","isloading_problem","languages_Supported","languagesSupported","index","btn1","btn2","TIMER","Active","ContestCode","problemName","dangerouslySetInnerHTML","__html","body","author","challengeType","maxTimeLimit","totalSubmissions","partialSubmissions","sourceSizeLimit","SubmitPage","getstatus","link","url","status","isloading","vaal","output","cmpinfo","stderr","error","message","runcode","formData","FormData","selectedIndex","post","vals","entry","comps","disabled","wrap","cols","rows","LeaderBoardPage","loadpage","seluser","selins","selcoun","page","isloading_leaderboard","catch","err","myrank","LDRB","B","head","p","App","Pages","PStack","Page","slice","CurrPage","CurrContest","CurrProblem","Login","user","isloading_loginpage","alert","Creds","make_request","dataUrl","last","update_pagelog","contest","loadcontest","loadproblem","LoadPage","Code","reuseuser","Ip","getContestList","window","location","href","errors","contestList","problem","get_ip","count","v","getUrlVars","token","t","refresh","r","isloading_contestpage","param","Tag","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4c64947b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\n\r\nclass TableItem extends Component {\r\n    render() {\r\n        if(this.props.itemtype==\"problem\"){\r\n            return (\r\n                <tr>\r\n                    <td width = \"25%\" align=\"center\" >\r\n                        <a className=\"underlineHover mp\"\r\n                            onClick = {this.props.PutProblemCode.bind(\r\n                                this,this.props.Problem)}\r\n                        > <b>{this.props.Problem.problemCode}</b> </a>\r\n                    </td>\r\n                    <td width = \"25%\" align=\"center\" >\r\n                        {this.props.Problem.successfulSubmissions}\r\n                    </td>\r\n                    <td width = \"25%\" align=\"center\" >\r\n                        {this.props.Problem.accuracy}\r\n                    </td>\r\n                    <td width = \"25%\" align=\"center\" >\r\n                        {this.props.Problem.contestCode}\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n        else if(this.props.itemtype==\"activity\"){\r\n            return (\r\n                <tr>\r\n                    <td  type =\"center\" className=\"mp\">\r\n                        {this.props.Activity.problemCode} \r\n                    </td>\r\n                    <td type =\"center\" className=\"mp\">\r\n                        {this.props.Activity.username} \r\n                    </td>\r\n                    <td  align =\"center\" type =\"center\" className=\"mp\" >\r\n                         {this.props.Activity.result}\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n        else if(this.props.itemtype==\"board\"){\r\n            if(typeof(this.props.Board.problemScore) !=\"undefined\"){\r\n                var ps = this.props.Board.problemScore.map(function(A){\r\n                    return <td type =\"center\" className=\"mp\">\r\n                    <b><span style={{color:\"green\"}}>{A.score}</span> /  <span style={{color:\"red\"}}>{A.penalty}</span></b>\r\n                    </td> });\r\n            }\r\n            return (\r\n                <tr>\r\n                    <td  type =\"center\" className=\"mp\">\r\n                        {this.props.Board.rank}\r\n                    </td>\r\n                    <td type =\"center\" className=\"mp\">\r\n                        {this.props.Board.username}\r\n                    </td>\r\n                    <td  type =\"center\" className=\"mp\">\r\n                        {this.props.Board.country}\r\n                    </td>\r\n                    <td  type =\"center\" className=\"mp\">\r\n                        {this.props.Board.totalTime}\r\n                    </td>\r\n                    <td  type =\"center\" className=\"mp\">\r\n                     <b>{this.props.Board.totalScore}</b>\r\n                    </td>\r\n                    <td  type =\"center\" className=\"mp\">\r\n                        {this.props.Board.penalty}\r\n                    </td>\r\n                    {ps}\r\n                    \r\n                </tr>\r\n            )\r\n        }\r\n        else if(this.props.itemtype==\"codes\"){\r\n            return (\r\n            <div className=\"mp\" onMouseOut={this.props.changeblack.bind(this)}  onMouseOver={this.props.changeblue.bind(this)} onClick={() => this.props.select_code(this.props.code)}><strong>{this.props.code.substring(0,this.props.Length)}</strong>\r\n                {this.props.code.substring(this.props.Length,this.props.code.length)}<br/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default TableItem\r\n","import React, { Component } from 'react'\r\nimport './Css/Login.css';\r\nimport logo from '../logo.svg';\r\nimport TableItem from './TableItem'\r\n\r\nexport class ChooseContestPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            option : -1,\r\n             List : [],\r\n             Length : 0,\r\n             allcontest : []\r\n        }\r\n        this.select_code = this.select_code.bind(this);\r\n        this.validateContest = this.validateContest.bind(this);\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    }\r\n    validateContest = () => {\r\n        if(this.props.isloading_choosepage == true){\r\n            return;\r\n        }\r\n        var code =  document.getElementById('codebox').value;\r\n        if(code == \"\")return;\r\n        for(var i = 0; i< this.props.ContestList.length;i++){\r\n            if ( code == this.props.ContestList[i].code || code == this.props.ContestList[i].name ){\r\n                document.getElementById(\"codebox\").removeEventListener(\"keydown\", this.handleKeyDown);\r\n                this.props.PutContestCode(this.props.ContestList[i].code);\r\n                return;\r\n            }\r\n        }\r\n        document.getElementById('codebox').value = \"\";\r\n        document.getElementById('codebox').placeholder = \"Invalid code\";\r\n    }\r\n    codeboxhandler = (e) =>{\r\n        var val = e.target.value;\r\n        var list = [];\r\n        if(val != \"\"){\r\n        for(var i=0;i<this.props.ContestList.length;i++){\r\n            if(this.props.ContestList[i].code.substring(0,val.length).toUpperCase() == val.toUpperCase()){\r\n                list.push(this.props.ContestList[i].code);\r\n            }\r\n            else if(this.props.ContestList[i].name.substring(0,val.length).toUpperCase() == val.toUpperCase()){\r\n                list.push(this.props.ContestList[i].name);\r\n            }\r\n        }\r\n        }\r\n        this.setState({\r\n            Length : e.target.value.length\r\n        })\r\n        this.setState({\r\n            List : list\r\n        });\r\n    }\r\n    select_code = (code) =>{\r\n        document.getElementById('codebox').value=code;\r\n        this.setState({ List : [] })\r\n        return;\r\n    }\r\n    changeblue = (e) =>{\r\n        e.target.style.color = '#5fbae9';\r\n    }\r\n    changeblack = (e) =>{\r\n        e.target.style.color = 'black';\r\n    }\r\n    render() {\r\n        if(this.props.isloading_choosepage == true || this.props.isloading_ip){\r\n            var button = <input type=\"button\" id=\"submitbtn\" className=\"fadeIn fourth\" value=\"Loading..\" \r\n            style={{background:\"#f4f4f4\", color:\"#000000\"}}/>\r\n        }\r\n        else{\r\n            var button = <input type=\"button\" id=\"submitbtn\" \r\n            onClick = {() =>this.validateContest()}\r\n            className=\"fadeIn fourth\" value=\"Submit\"/>\r\n            var PRBS =  this.state.List.map(function(P) {\r\n                return <TableItem \r\n                changeblue = {this.changeblue}\r\n                changeblack = {this.changeblack}\r\n                    Length = {this.state.Length}\r\n                    select_code = {this.select_code}\r\n                    code = {P} itemtype=\"codes\"\r\n                    />\r\n            }.bind(this));    \r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"wrapper fadeInDown\">\r\n                <div id=\"formContent\">\r\n                    <div className=\"fadeIn first\">\r\n                        <div className=\"mp\"><h1><b>Contest Arena</b></h1></div>\r\n                        <form>\r\n                        <input autoComplete=\"off\" type=\"text\" id=\"codebox\" className=\"fadeIn second\" placeholder=\"Contest Code/Name\"\r\n                            onChange = {this.codeboxhandler}\r\n                        />\r\n                        {button}<br/>\r\n                        <div type=\"maxx\">{PRBS}</div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    handleKeyDown = (event) => {\r\n        switch( event.keyCode ) {\r\n            case 13:\r\n                this.setState({ option : -1 });\r\n                event.preventDefault();\r\n                this.validateContest();\r\n                break;\r\n            case 38://Up\r\n                this.setState({ option : this.max(-1,this.state.option-1) },\r\n                () =>{\r\n                    \r\n                    if(this.state.option == -1){\r\n                        document.getElementById('codebox').value =\" \";\r\n                    }\r\n                    else if (this.state.List.length > this.state.option ){\r\n                        document.getElementById('codebox').value = this.state.List[this.state.option];\r\n                    }\r\n                    \r\n                }\r\n                );\r\n                break;\r\n            case 40://Down\r\n                this.setState({ option : this.min(this.state.option+1, this.state.List.length-1) },\r\n                    () =>{\r\n                        if(this.state.List.length > this.state.option ){\r\n                            document.getElementById('codebox').value = this.state.List[this.state.option];\r\n                        }\r\n                    }   \r\n                );\r\n                break;\r\n            default:\r\n                this.setState({ option : -1 });\r\n                break;\r\n        }\r\n    }\r\n    max =(a,b) =>{\r\n        if(a>b)return a;\r\n        else return b;\r\n    }\r\n    min =(a,b) =>{\r\n        if(a<b)return a;\r\n        else return b;\r\n    }\r\n    componentDidMount(){\r\n        document.getElementById(\"codebox\").addEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n}\r\n\r\nexport default ChooseContestPage\r\n","import React, { Component } from 'react'\r\nimport TableItem from './TableItem'\r\nimport axios from 'axios'\r\n\r\nexport class ActivityPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        // Props includes Current Contest code / Current Problem Code, PageType \r\n        this.state = {\r\n            Activity : [{\r\n                problemCode: \"Loading\",\r\n                username: \"Loading\",\r\n                result: \"Loading\",\r\n            }]\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        if (this.props.PageType == \"ContestPage\"){\r\n            var Url = this.props.Url+'?func=Get_contest_submissions&contest='+this.props.Contest+'&ip='+this.props.ip;\r\n            console.log(Url);\r\n            axios.get(Url).then(response => response.data)\r\n            .then((list) => {\r\n                console.log(list);\r\n                if(this.props.doCheck(list) )return;\r\n                list = list.result.data.content;\r\n                this.setState({\r\n                    Activity : list\r\n                })\r\n            })\r\n        }\r\n        else if (this.props.PageType == \"ProblemPage\"){\r\n            //extract activites of Problem specified from the given Contest\r\n            var Url = this.props.Url+'?func=Get_contest_submissions&problem='+this.props.Problem+'&ip='+this.props.ip;\r\n            console.log(Url);\r\n            axios.get(Url).then(response => response.data)\r\n            .then((list) => {\r\n                console.log(list);\r\n                if(this.props.doCheck(list) )return; \r\n                list = list.result.data.content;\r\n                this.setState({\r\n                    Activity : list\r\n                })\r\n             })\r\n        }\r\n    }\r\n    render() {    \r\n        var ACTV = this.state.Activity.map(function(A){\r\n            return <TableItem\r\n            Activity = {A} itemtype=\"activity\"/> });\r\n    \r\n        return (   <div style={{overflow:\"auto\" , maxHeight:\"470px\",maxWidth:\"500px\"}}>\r\n            <table><tbody>\r\n                <tr>\r\n                    <th>Problem Code</th>\r\n                    <th>Username</th>\r\n                    <th>Verdict</th>\r\n                </tr>\r\n                {ACTV}\r\n            </tbody></table></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActivityPage\r\n","import React, { PureComponent } from 'react'\r\n\r\nclass Timer extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        var timing;\r\n    }\r\n    \r\n    start_timer = () =>{\r\n        var starttime = this.props.starttime;\r\n        var endtime = this.props.endtime;\r\n\r\n\r\n        var curr_day =  new Date().getDate();\r\n        var curr_hours =  new Date().getHours();\r\n        var curr_minutes =  new Date().getMinutes();\r\n        var curr_second =  new Date().getSeconds();\r\n\r\n\r\n        console.log(starttime);console.log(endtime);\r\n        var Finish = new Date(endtime);\r\n        var Start = new Date(starttime);\r\n        console.log(Finish);console.log(Start);\r\n        var Current = new Date();\r\n\r\n        if(Start > Current){\r\n            //countdown  to start\r\n            document.getElementById(\"Toshow\").innerHTML = \"Will Start in\";\r\n            Finish = Start;\r\n        }\r\n        else if( Finish < Current){\r\n            // Its over\r\n            document.getElementById(\"Toshow\").innerHTML = \"Contest Finished\";\r\n        }\r\n\r\n        this.timing = setInterval(\r\n            function () {\r\n            var currentDate = new Date().getTime();\r\n            var timeLeft = Finish - currentDate;\r\n\r\n            var days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));\r\n            if (days < 10) days = \"0\" + days;\r\n            var hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n            if (hours < 10) hours = \"0\" + hours;\r\n            var minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));\r\n            if (minutes < 10) minutes = \"0\" + minutes;\r\n            var seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);\r\n            if (seconds < 10) seconds = \"0\" + seconds;\r\n            \r\n            \r\n            document.getElementById(\"Countdown\").innerHTML =\"<b>\"+days + \"</b>d<b> \" + hours + \"</b>h<b> \" + minutes + \"</b>m<b> \" + seconds + \"</b>s\";\r\n\r\n            console.log(timeLeft);\r\n            if (timeLeft <= 0) {\r\n                clearInterval(this.timing);\r\n                document.getElementById(\"Toshow\").innerHTML = \"Contest Finished\";\r\n                document.getElementById(\"Countdown\").innerHTML = \"<b>It's over</b>\";\r\n                //return;\r\n            }\r\n            \r\n            }\r\n        , 1000);\r\n    }\r\n    componentDidMount(){\r\n        this.start_timer();\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.timing);\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <tr><th type=\"center\" id=\"Toshow\" >Time left</th></tr>\r\n                <tr><td  type=\"center\" className=\"mp\" id=\"Countdown\"></td></tr>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer","import React, { Component } from 'react'\r\nimport style from'./Css/mainpage.css';\r\nimport TableItem from './TableItem'\r\nimport ActivityPage from './ActivityPage'\r\nimport Timer from './Timer'\r\n\r\nexport class ContestPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.PutProblemCode = this.PutProblemCode.bind(this)\r\n    }\r\n    PutProblemCode(Problem){\r\n        var Finish = new Date(this.Contest.startDate);\r\n        var Start = new Date(this.Contest.endDate);\r\n        var curr = new Date();\r\n        this.props.PutProblemCode(Problem)\r\n    }\r\n    \r\n    render(){\r\n        if(this.props.isloading_contest == false){\r\n            if(this.props.Contest.isParent == true){\r\n                var Showsidepane =\r\n                    <table ><tbody>\r\n                        <Timer starttime={this.props.Contest.startDate}\r\n                            endtime={this.props.Contest.endDate}\r\n                        />\r\n                    </tbody></table>\r\n                var description = \r\n                    <table align=\"left\"><tbody>\r\n                        <tr>\r\n                            <th align=\"center\" className=\"mp\"  width=\"70%\" > Contest Divsions </th>\r\n                            <th align=\"center\" className=\"mp\"  width=\"30%\" > Contest Codes </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Division 1</td><td>\r\n                            <a className=\"underlineHover mp\" \r\n                                onClick = {this.props.PutContestCode.bind(this,this.props.Contest.children[0])} \r\n                                >\r\n                                {this.props.Contest.children[0]}\r\n                            </a></td>\r\n                        </tr><tr>\r\n                            <td>Division 2</td><td>\r\n                            <a className=\"underlineHover mp\" \r\n                                onClick = {this.props.PutContestCode.bind(this,this.props.Contest.children[1])}\r\n                                 >\r\n                                {this.props.Contest.children[1]}\r\n                            </a></td>\r\n                        </tr>\r\n                    </tbody></table>\r\n            }\r\n            else{\r\n                var PRBS = \r\n                    this.props.Contest.problemsList.map(function(P) {\r\n                        //console.log(P);\r\n                        return <TableItem \r\n                        key = {P.problemCode}\r\n                        PutProblemCode = {\r\n                            (P) =>  {this.props.PutProblemCode(P)} \r\n                        }\r\n                        Problem = {P} itemtype=\"problem\"/> }.bind(this));\r\n                var description =\r\n                    <table align=\"left\"><tbody>\r\n                    <tr>\r\n                        <th align=\"center\" width = \"30%\" className=\"mp\"   > Problem Code </th>\r\n                        <th align=\"center\" width = \"25%\" className=\"mp\"   > Successful Submissions </th>\r\n                        <th align=\"center\" width = \"25%\" className=\"mp\"   > Accuracy </th>\r\n                        <th align=\"center\" width = \"30%\" className=\"mp\"   > Contest Code </th>\r\n                    </tr>\r\n                    {PRBS}\r\n                    </tbody></table>\r\n                var Showsidepane =\r\n                    <table ><tbody>\r\n                        <Timer starttime={this.props.Contest.startDate}\r\n                            endtime={this.props.Contest.endDate}\r\n                        />\r\n                        <tr><td></td></tr>\r\n                        <tr><th  type=\"center\" className=\"mp\" > Recent Activity </th></tr>\r\n                        <tr><td className=\"fortable\">\r\n                            <ActivityPage  \r\n                            \r\n                            doCheck = {this.props.doCheck}\r\n                            Url = {this.props.Url}\r\n                            ip = {this.props.ip}\r\n                            Contest = {this.props.Contest.code} PageType=\"ContestPage\" />\r\n                        </td></tr>\r\n                    </tbody></table>\r\n            }\r\n        }\r\n        if(this.props.isloading_contest == false){\r\n        var heading = <h1 className=\"mp\" align =\"center\">Contest Dashboard: {this.props.Contest.name} ({this.props.Contest.code})</h1>\r\n        }\r\n        else{\r\n        var heading = <h1 className=\"mp\" align =\"center\">Contest Dashboard: Loading....</h1>\r\n        }\r\n        return (\r\n            <div className=\"wrappercp fadeInDown makefull\"><div id=\"cpagecontent\">\r\n                <div className=\"fadeIn second\" type=\"blue\">\r\n                    {heading}\r\n                </div>\r\n                <table ><tbody><tr><td  width=\"75%\">\r\n                    {description}\r\n                </td>\r\n                <td>\r\n                    {Showsidepane}\r\n                </td>\r\n                </tr></tbody></table>\r\n            </div></div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default ContestPage\r\n","import React, { Component } from 'react'\r\nimport  './Css/Topbar.css';\r\n\r\nclass Topbar extends Component {\r\n    \r\n    render() {\r\n        if(this.props.isloginOK){\r\n            var Logout_info = <a className=\"underlineHovernav  navbar-right\" type=\"nav\"  \r\n                onClick={this.props.Logout}\r\n            >Logout</a>\r\n            var Login_info = <a className=\"navbar-right\" type=\"nav\" > \r\n            Hello {this.props.username} </a>\r\n        }\r\n        else{\r\n            if(this.props.isloading_ip == true){\r\n                var Login_info = <a className=\"underlineHovernav  navbar-right\" type=\"nav\" \r\n                >Loading..</a>\r\n            }\r\n            else{\r\n                var Login_info = <a className=\"underlineHovernav  navbar-right\" type=\"nav\" \r\n                onClick={this.props.oauth.bind(this)} > \r\n                Login</a>\r\n            }\r\n            \r\n        }\r\n        if(typeof(this.props.Contest.code) !=\"undefined\" ){\r\n            var ContestPage_info = <a className=\"underlineHovernav  navbar-left\" type=\"nav\"\r\n            onClick={this.props.ChangePage.bind(this,\"ContestPage\")} \r\n            >Contest-Dashboard: {this.props.Contest.code}\r\n            </a>\r\n            if(typeof(this.props.Contest.problemsList) != \"undefined\" && this.props.Contest.problemsList.length>0){\r\n                var Leaderboard = <a className=\"underlineHovernav  navbar-left\" type=\"nav\"\r\n                onClick={this.props.ChangePage.bind(this,\"LeaderBoardPage\")} \r\n                >Leaderboard</a>\r\n            }\r\n        }\r\n        if(typeof(this.props.Problem.problemCode) !=\"undefined\" ){\r\n            var ProblemPage_info = <a className=\"underlineHovernav  navbar-left\" type=\"nav\"\r\n                onClick={this.props.ChangePage.bind(this,\"ProblemPage\")} \r\n                >Problem-Dashboard: {this.props.Problem.problemCode}\r\n            </a>\r\n        }\r\n        if(this.props.isFirst > 1){\r\n            var backbtn = <a className=\"underlineHovernav navbar-left\" type=\"nav\" \r\n                onClick= {this.props.Back.bind(this)\r\n            }>Back</a>\r\n            var HomePage = <a className=\"underlineHovernav navbar-left\" type=\"nav\" \r\n                onClick = {this.props.ChangePage.bind(this,\"ChooseContestPage\")}\r\n            >Homepage</a>\r\n        }\r\n        else{\r\n            var backbtn = <a className=\"navbar-left\" type=\"deactivate\">Back</a>\r\n            var HomePage = <a className=\"navbar-left\" type=\"deactivate\">Homepage</a>\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"navbar\">\r\n                    {backbtn}\r\n                    {HomePage}\r\n                    {Login_info}\r\n                    {Logout_info}\r\n                    {ContestPage_info}\r\n                    {ProblemPage_info}\r\n                    {Leaderboard}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Topbar\r\n","import React, { Component } from 'react'\r\nimport style from'./Css/mainpage.css';\r\nimport Timer from './Timer'\r\nimport ActivityPage from './ActivityPage'\r\n\r\nexport class ProblemPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        if(this.props.isloading_problem == false){\r\n            var languages_Supported = this.props.Problem.languagesSupported.map(function(P, index) {\r\n                if(index==this.props.Problem.languagesSupported.length-1){\r\n                    return  P+\"\\n\";\r\n                }\r\n                if(index%4!=0){\r\n                    return P +\", \"}\r\n                else{return P +\"\\n\"}\r\n            }.bind(this));\r\n            var btn1 = <center>\r\n            <a onClick ={this.props.ChangePage.bind(this,\"SubmitPage\")} ><div type=\"buttongreen\"><b>Submit</b></div></a>\r\n            </center>\r\n\r\n            var btn2 =<center>\r\n            <a onClick ={this.props.ChangePage.bind(this,\"SubmitPage\")} width=\"100%\"><div type=\"buttongreensidepane\" width=\"100%\"><b>Submit</b></div></a>\r\n            </center>\r\n        }\r\n        if(this.props.isloading_problem == false){\r\n            var TIMER =\r\n                <Timer starttime={this.props.Contest.startDate}\r\n                endtime={this.props.Contest.endDate} />\r\n            var Active = <ActivityPage \r\n                doCheck = {this.props.doCheck}\r\n                Url = {this.props.Url}\r\n                ip = {this.props.ip}\r\n                Contest = {this.props.ContestCode}\r\n                Problem = {this.props.Problem.problemCode}\r\n                PageType=\"ProblemPage\" />\r\n            var heading = <h1 className=\"mp\" align =\"center\">Problem Dashboard: {this.props.Problem.problemName} ({this.props.Problem.problemCode})</h1>\r\n        }\r\n        else{\r\n            var heading = <h1 className=\"mp\" align =\"center\">Problem Dashboard: Loading....</h1>\r\n        }\r\n        return (\r\n            <div className=\"wrappercp fadeInDown makefull\"><div id=\"cpagecontent\">\r\n            <div className=\"fadeIn second\" type=\"blue\">\r\n                {heading}\r\n            </div>\r\n                <table><tbody>\r\n                <tr>\r\n                    <td  width=\"75%\" >\r\n                        <table ><tbody>\r\n                            <tr>\r\n                            <th align=\"center\" className=\"mp\"  width=\"70%\" >Problem Description</th>\r\n                            </tr>\r\n                            <tr><td>\r\n                                <div type=\"ppage\"  dangerouslySetInnerHTML={{__html: this.props.Problem.body}}>\r\n                                </div>\r\n                            </td></tr>\r\n                            <tr><td></td></tr>\r\n                        </tbody></table>\r\n                    {btn1}\r\n                    </td>\r\n                    <td>\r\n                        <table><tbody>{TIMER}\r\n                            <tr><td>{btn2}</td></tr>\r\n                            <tr><th  type=\"center\" className=\"mp\" > Recent Activity </th></tr>\r\n                            <tr><td className=\"fortable\">{Active}</td></tr>\r\n                        </tbody></table>\r\n                    </td>\r\n                </tr>\r\n                <tr><td><div>\r\n                    <b>Author: </b> {this.props.Problem.author} <br/>\r\n                    <b>Challenge type: </b> {this.props.Problem.challengeType} <br/>\r\n                    <b>Max time limit: </b> {this.props.Problem.maxTimeLimit} <br/>\r\n                    <b>Successful submissions: </b> {this.props.Problem.successfulSubmissions} <br/>\r\n                    <b>Total submissions: </b> {this.props.Problem.totalSubmissions} <br/>\r\n                    <b>Partial submissions: </b> {this.props.Problem.partialSubmissions} <br/>\r\n                    <b>Source size limit: </b> {this.props.Problem.sourceSizeLimit} <br/>\r\n                    <b>Languages Supported: <br/></b>{languages_Supported}<br/>\r\n                </div></td>\r\n                </tr>\r\n                </tbody></table>\r\n            </div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProblemPage\r\n\r\n// dateAdded: \"2012-10-24\"\r\n// languagesSupported: (46) [\"C++ 6.3\", \"PAS gpc\", \"PERL\", \"PYTH\", \"FORT\", \"WSPC\", \"ADA\", \"CAML\", \"ICK\", \"JAVA\", \"C\", \"BF\", \"ASM\", \"CLPS\", \"PRLG\", \"ICON\", \"RUBY\", \"SCM qobi\", \"PIKE\", \"D\", \"HASK\", \"PAS fpc\", \"ST\", \"NICE\", \"LUA\", \"C#\", \"BASH\", \"PHP\", \"NEM\", \"LISP sbcl\", \"LISP clisp\", \"SCM guile\", \"JS\", \"ERL\", \"TCL\", \"SCALA\", \"C++ 4.3.2\", \"C++14\", \"PERL6\", \"NODEJS\", \"TEXT\", \"PYPY3\", \"CLOJ\", \"GO\", \"PYTH 3.6\", \"F#\"]\r\n// sourceSizeLimit: 50000\r\n// maxTimeLimit: 1\r\n// challengeType: \"binary\"\r\n// author: \"ivanz_adm\"\r\n// successfulSubmissions: 9306\r\n// totalSubmissions: 11045\r\n// partialSubmissions: 0\r\n// tags: (3) [\"ad-hoc\", \"cakewalk\", \"jan13\"]\r\n// body:\r\n","import React, { Component } from 'react'\r\nimport style from'./Css/mainpage.css'\r\nimport axios from 'axios'\r\n\r\nexport class SubmitPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            isloading : false,\r\n            data : {},\r\n            error : \"\"\r\n        }\r\n    }\r\n    getstatus = (link) =>{\r\n        var url = this.props.Url+'?func=get_status&link='+link+'&ip='+this.props.ip;\r\n        axios.get(url).then(response => response.data)\r\n        .then((response) => {\r\n            console.log(response);\r\n            if(typeof(response.result.status) != \"undefined\"){\r\n                this.setState({ isloading : false , error: response.result.data.message});\r\n                return;\r\n            }\r\n            this.setState({ isloading : false , data : response.result.data});\r\n            response = response.result.data;\r\n            var vaal = \"output: \"+response.output+\"\\nCompilation info: \"+response.cmpinfo+\"\\nStd err: \"+response.stderr+\"\\n\";\r\n            console.log(response);\r\n            document.getElementById('out').value=vaal;\r\n        });\r\n    }\r\n    runcode = () =>{\r\n        this.setState({ isloading : true })\r\n        let formData = new FormData();\r\n        formData = {\r\n            \"sourceCode\" : document.getElementById(\"sc\").value,\r\n            'language' : this.props.Problem.languagesSupported[document.getElementById(\"sel\").selectedIndex],\r\n            \"input\" : document.getElementById(\"input\").value \r\n        };\r\n        console.log(formData);\r\n\r\n        axios.post( this.props.Url+'?func=runcode&ip='+this.props.ip ,formData)\r\n        .then((response) => {\r\n            console.log(response);\r\n            this.getstatus(response.data.result.data.link);\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    render() {\r\n        var vals = this.props.Problem.languagesSupported.map((entry) => {\r\n            return <option>{entry}</option>\r\n        })  \r\n        if(this.state.isloading == true){\r\n            var comps = <tr>\r\n            <td><select id=\"sel\">{vals}  </select>    <a ><div type=\"buttongreen\" disabled><b>Submit</b></div></a>             <a ><div type=\"buttongreen\" onClick={ () => {this.runcode()}} disabled>\r\n                <b>Loading..</b></div></a>\r\n            </td>\r\n                <td><textarea wrap=\"off\" id=\"out\" cols=\"60\" rows=\"5\" disabled placeholder=\"Loading..\\n Please Wait\"></textarea>\r\n            </td></tr>\r\n        }\r\n        else{\r\n            var comps =  <tr>\r\n            <td><select id=\"sel\">{vals}  </select>          <a ><div type=\"buttongreen\"><b>Submit</b></div></a>    <a ><div type=\"buttongreen\" onClick={ () => {this.runcode()}}>\r\n                <b>Run Code</b></div></a>\r\n            </td>\r\n                <td><textarea wrap=\"off\" id=\"out\" cols=\"60\" rows=\"5\" disabled placeholder=\"Sample output\">\r\n                </textarea>  <span style={{color:\"red\"}}><b>{this.state.error}</b></span>\r\n            </td></tr>\r\n        }\r\n        return (\r\n            <div className=\"wrappercp fadeInDown makefull\"><div id=\"cpagecontent\">\r\n            <div className=\"fadeIn second\" type=\"blue\">\r\n                <h1 className=\"mp\">Submit: {this.props.Problem.problemName} : {this.props.Problem.problemCode} </h1>\r\n            </div><br/>\r\n            <div>\r\n            <table><tbody>\r\n                <tr>\r\n                    <td width=\"80%\"> <textarea id=\"sc\" wrap=\"off\"  cols=\"115\" rows=\"15\" placeholder=\"Place your code in here\"></textarea></td>\r\n                    <td> <textarea wrap=\"off\" id=\"ins\" id=\"input\" cols=\"60\" rows=\"15\" placeholder=\"Custom test cases\"></textarea></td>\r\n                \r\n                </tr>\r\n                    {comps}            \r\n            </tbody></table>\r\n            </div>\r\n            </div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubmitPage\r\n","import React, { Component } from 'react'\r\nimport style from'./Css/mainpage.css';\r\nimport TableItem from './TableItem'\r\nimport axios from 'axios'\r\nexport class LeaderBoardPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        // contest code and username expected as props\r\n        // will show rank wise, username , no of question solved, which questions are solved\r\n        this.state = {\r\n            isloading_leaderboard : true,\r\n            Board : [ {problemScore:[]} ],\r\n            page : 1,\r\n            myrank: \"\"\r\n        }\r\n    }\r\n    loadpage = () => {\r\n        var Url = this.props.Url+'?func=Get_rankings&ip='+this.props.ip;\r\n        Url = Url+'&code='+this.props.ContestCode;\r\n        Url = Url+'&user='+this.state.seluser;\r\n        Url = Url+'&ins='+this.state.selins;\r\n        Url = Url+'&country='+this.state.selcoun;\r\n        Url = Url+'&offset='+this.state.page*20;\r\n        Url = Url+'&limit=20';\r\n        console.log(Url);\r\n            this.setState({ isloading_leaderboard :true })\r\n        axios.get(Url).then(response => response.data)\r\n        .then((list) => {\r\n            console.log(list);\r\n            if(this.props.doCheck(list) )return;\r\n            list = list.result.data;\r\n            list =list.content;\r\n            list = list.map( (entry) =>{\r\n                while(entry.problemScore.length < this.props.problemsList.length){\r\n                    entry.problemScore.push({\r\n                        score : '-',\r\n                        penalty : '-'\r\n                    })\r\n                }\r\n                return entry;\r\n            }\r\n            )\r\n            this.setState({Board : list})\r\n            this.setState({ isloading_leaderboard :false })\r\n        })\r\n        .catch(err => console.log(\"leaderboard Axios err: \", err))\r\n    }\r\n    componentWillMount(){\r\n        this.loadpage();\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isloading_leaderboard == false){\r\n            if(this.state.Board.length >0){\r\n                var LDRB = this.state.Board.map(function(B){\r\n                    return <TableItem\r\n                    Board = {B} itemtype=\"board\"/> });\r\n            }\r\n            var head = \r\n            <h1 className=\"mp\" align =\"left\">LeaderBoard: {this.props.ContestCode}\r\n                <span style={{align:\"right\"}}>{this.state.myrank.username}: {this.state.myrank.rank}</span>\r\n            </h1>\r\n        }\r\n        else{\r\n            var head = \r\n            <h1 className=\"mp\" align =\"left\">LeaderBoard: Loading </h1>\r\n        }\r\n        var val = this.props.problemsList.map((p) =>{\r\n            return <th type=\"center\" className=\"mp\">{p.problemCode}</th>\r\n        })\r\n        return (\r\n            <div className=\"wrappercp fadeInDown makefull\"><div id=\"cpagecontent\">\r\n            <div className=\"fadeIn second\" type=\"bluefull\">\r\n                {head}\r\n            </div>\r\n            <br/>\r\n            <div></div>\r\n            <br/>\r\n                <table><tbody>\r\n                    <tr>\r\n                        <th  type =\"center\" className=\"mp\">Rank</th>\r\n                        <th  type =\"center\" className=\"mp\">Username</th>\r\n                        <th  type =\"center\" className=\"mp\">Country</th>\r\n                        <th  type =\"center\" className=\"mp\">Total Time</th>\r\n                        <th  type =\"center\" className=\"mp\">Total Score</th>\r\n                        <th  type =\"center\" className=\"mp\">Penalty</th>\r\n                        {val}\r\n                    </tr>\r\n                    {LDRB}\r\n                </tbody></table>\r\n            </div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LeaderBoardPage","import React, { Component } from 'react'\nimport './App.css'\nimport ChooseContestPage from './Component/ChooseContestPage'\nimport ContestPage from './Component/ContestPage'\nimport Topbar from './Component/Topbar'\nimport ProblemPage from './Component/ProblemPage'\nimport SubmitPage from './Component/SubmitPage'\nimport LeaderBoardPage from './Component/LeaderBoardPage'\nimport axios from 'axios'\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      Url : \"http://localhost:8080/CodechefAcess.php\",\n      dataUrl : \"http://localhost:8080/database.php\",\n      Creds : {\n        username : \"\",\n        isloginOK : false\n      },\n      ip : \"\",\n      ContestList : [],\n      Pages : {\n        PStack : [{\n          Page : \"SubmitPage\",\n          CurrProblem : {},\n          CurrContest : {}\n        }],\n        CurrPage : \"SubmitPage\"\n      },\n      CurrProblem : { \n        problemCode :\"CHCBOX\",\n        languagesSupported : [\"C++ 6.3\"]\n      },\n      CurrContest : {},\n      isloading_loginpage : false,\n      isloading_contest : false,\n      isloading_choosepage : false,\n      isloading_contestpage : false,\n      isloading_problem : false,\n      isloading_ip :false\n    }\n  }\n\n  Back = () =>{\n    var list = [];\n    list = this.state.Pages.PStack;\n    if(list.length == 1){\n      return;\n    }\n    list = list.slice(0,list.length-1);\n    var Page = list[list.length-1];\n    this.setState({\n      Pages : {\n        CurrPage : Page.Page,\n        PStack : list\n      }\n    })\n    this.setState({\n      CurrContest : Page.CurrContest,\n      CurrProblem : Page.CurrProblem\n    })\n  }\n  \n  Login = (user) => {\n    if(this.state.isloading_loginpage == true){return;}\n    this.setState({\n      isloading_loginpage : true\n    })\n    var Url = this.state.Url+'/?login_req=true&func=Search_User&username='+user;\n    console.log(Url);\n    axios.get(Url).then(response => response.data)\n    .then((data) => {\n      console.log(data);\n        if( data.result.data.code != 9001 ){\n        alert(\"Invalid Credentials: \" + user);\n        this.setState({\n          isloading_loginpage : false\n        })\n        return;\n      }\n      this.setState({\n        Creds :{\n          username : data.result.data.content.username,\n          isloginOK : true\n        }\n      })\n      this.setState({\n        isloading_loginpage : false\n      })\n      this.make_request(this.state.dataUrl,'?func=savenewuser&user='+data.result.data.content.username)\n      this.Back();\n    })\n    .catch(err => console.log(\"login err: \", err));\n  }\n  \n  Logout = () => {\n    this.make_request(this.state.dataUrl,'?func=logout&ip='+this.state.ip);\n    this.setState({\n      Creds : {\n        username : \"\",\n        isloginOK : false,\n      }\n    })\n  }\n  make_request(url,param){\n    var Url = url+param;\n    console.log(Url);\n    axios.get(Url).then(response => response.data)\n    .then((data) => {\n\n    })\n    .catch(err => console.log(\"Axios err: \", err));\n  }\n  \n  ChangePage = (page) => {\n    var list = [];\n    list = this.state.Pages.PStack;\n    var last = list[list.length - 1];\n    if(last.Page == page && last.CurrContest ==  this.state.CurrContest && last.CurrProblem ==  this.state.CurrProblem){\n      return;\n    }\n    list.push({\n      Page : page,\n      CurrContest: this.state.CurrContest,\n      CurrProblem: this.state.CurrProblem,\n    });\n    console.log(list);\n    this.setState({\n      Pages : {\n        CurrPage: page,\n        PStack : list\n      }\n    })\n  }\n  update_pagelog = () =>{\n    var list = [];\n    list = this.state.Pages.PStack;\n    list[list.length - 1].CurrContest = this.state.CurrContest;\n    list[list.length - 1].CurrProblem = this.state.CurrProblem;\n    this.setState({\n      Pages : {\n        CurrPage: this.state.Pages.CurrPage,\n        PStack : list\n      }\n    })\n  }\n\n  PutContestCode = (contest) => {\n    this.loadcontest(contest);\n    this.setState({\n      CurrContest : contest\n    }, () =>this.ChangePage(\"ContestPage\") );\n  }\n\n  PutProblemCode = (Problem) => {\n    this.loadproblem(Problem);\n    this.ChangePage(\"ProblemPage\");\n  }\n\n  LoadPage = () =>{\n     if( this.state.Pages.CurrPage == \"ContestPage\"){\n      return <ContestPage  \n        doCheck = {this.doCheck}\n        ip = {this.state.ip}\n        Url = {this.state.Url}\n        isloading_contest={this.state.isloading_contest}\n        Contest = {this.state.CurrContest}\n        PutContestCode = {this.PutContestCode}\n        PutProblemCode = {(P) => this.PutProblemCode(P)} />\n    }\n    else if( this.state.Pages.CurrPage == \"ChooseContestPage\" ){\n      return <ChooseContestPage\n        isloading_choosepage={this.state.isloading_choosepage} \n        isloading_ip = {this.state.isloading_ip} \n        ContestList = {this.state.ContestList}\n        PutContestCode = {this.PutContestCode} />\n    }\n    else if( this.state.Pages.CurrPage == \"ProblemPage\" ){\n      return <ProblemPage \n      doCheck = {this.doCheck}\n        ip = {this.state.ip}\n        Url = {this.state.Url}\n        isloading_problem={this.state.isloading_problem} \n        ChangePage = {this.ChangePage}\n        Problem = {this.state.CurrProblem} \n        Contest = {this.state.CurrContest}\n        ContestCode = {this.state.CurrContest.Code}/>\n    }\n    else if( this.state.Pages.CurrPage == \"SubmitPage\" ){\n      return <SubmitPage \n      doCheck = {this.doCheck}\n        ip = {this.state.ip} \n        Url = {this.state.Url} \n        ChangePage = {this.ChangePage}\n        Problem = {this.state.CurrProblem}\n        ContestCode = {this.state.CurrContest.code} />\n    }\n    else if( this.state.Pages.CurrPage == \"LeaderBoardPage\" ){\n      return <LeaderBoardPage\n        ip = {this.state.ip}\n        doCheck = {this.doCheck}\n        problemsList = {this.state.CurrContest.problemsList}\n        Url = {this.state.Url}\n        username = {this.state.Creds.username}\n        ContestCode = {this.state.CurrContest.code} />\n    }\n  }\n\n  render() {\n    let Tag = this.LoadPage()\n    \n    return (\n      <div className=\"App\"  id=\"Main\">\n          <Topbar \n            username={this.state.Creds.username} isloginOK={this.state.Creds.isloginOK} \n            Logout = {this.Logout}\n            Back = {this.Back}\n            isloading_ip = {this.isloading_ip}\n            isFirst = {this.state.Pages.PStack.length}\n            Problem = {this.state.CurrProblem}\n            Contest = {this.state.CurrContest}\n            oauth = {this.oauth}\n            ChangePage = {this.ChangePage}\n          />\n          {Tag}\n      </div>\n    )\n  }\n  reuseuser = (Ip) => {\n    var Url = this.state.Url+'?func=Get_my_username&ip='+Ip;\n    console.log(Url);\n    axios.get(Url).then(response => response.data).then((data) => {\n      console.log(data);   var user = \"\";\n      if(this.doCheck(data) )return;  this.getContestList(Ip);\n      if(typeof(data.username) != \"undefined\"){ user = data.username; }\n      else{ user = data.result.data.content.username; }\n        Url = this.state.dataUrl+'?func=savenewuser&user='+user+'&ip='+Ip;\n        console.log(Url); axios.get(Url);\n        Url = this.state.dataUrl+'?func=logout_from_other_sessions&user='+user+'&ip='+Ip;\n        console.log(Url); axios.get(Url);\n        this.setState({ Creds : { username : user, isloginOK : true } })\n    })\n    .catch(err => console.log(\"checkuser err: \", err));\n  }\n\n  oauth = () => {\n    window.location.href = \"http://localhost:8080\";\n  }\n\n\n  doCheck = (data) => {\n    if(data.status==\"FORBIDDEN\"){\n      alert(\"Access Forbidden\");this.Back();\n      if(this.state.CurrContest.isParent == true){\n        this.Back();\n      }\n      return true;\n    }\n    else if(typeof(data.code) != \"undefined\"){\n      if(this.state.Pages.PStack.length >1){\n        alert(data.code);\n      }\n      else{\n        this.Logout();\n        this.oauth();\n      }\n      this.Back();\n      return true;\n    } \n    else if(typeof(data.result) != \"undefined\" && typeof(data.result.errors) != 'undefined' ){\n      alert(data.result.errors[0].message);\n      if(data.result.errors[0].code == 'unauthorized'){\n        this.oauth();return true;\n      }\n      this.Back();return true;\n    }\n    else if(typeof(data.result) != \"undefined\" && (data.result.data.code!=9001)){\n      alert(data.result.data.message);\n      this.Back();return true;\n    }\n    else if(typeof(data.result) != \"undefined\" && (data.result.data.code==\"unauthorized\")){\n      this.Logout();\n      this.oauth();return true;\n    }\n    return false;\n  }\n  getContestList = (Ip) =>{\n    this.setState({\n      isloading_choosepage : true\n    })\n    var Url = this.state.Url+'?func=List_contest&ip='+Ip;\n      console.log(Url);\n      axios.get(Url).then(response => response.data)\n      .then((list) => {\n        console.log(list);\n        if(this.doCheck(list) )return;\n        list = list.result.data;\n        console.log(list.content.contestList[0]);\n        this.setState({ContestList : list.content.contestList})\n        this.setState({ isloading_choosepage : false })\n      })\n      .catch(err => console.log(\"contestlist err: \", err))\n  }\n\n  loadcontest = (contest) => {\n    this.setState({\n      isloading_contest : true,\n      CurrProblem : {}\n    })\n    var Url = this.state.Url+'?func=Get_Contest&code='+contest+'&ip='+this.state.ip;\n      console.log(Url);\n      axios.get(Url).then(response => response.data)\n      .then((list) => {\n        console.log(list);\n        if(this.doCheck(list) )return; \n        list = list.result.data;\n        this.setState({CurrContest : list.content})\n        this.setState({\n          isloading_contest : false\n        })\n        this.update_pagelog();\n      })\n      .catch(err => console.log(\"contest Axios err: \", err))\n  }\n\n  loadproblem = (problem) => {\n    this.setState({\n      isloading_problem : true\n    })\n    console.log(problem);\n    // return;\n    var Url = this.state.Url+'?ip='+this.state.ip+'&func=Get_Problem&contestcode='+problem.contestCode+'&pcode='+problem.problemCode;\n      console.log(Url);\n      axios.get(Url).then(response => response.data)\n      .then((list) => {\n        console.log(list);\n        if(this.doCheck(list) )return; \n        else if(list.result.data.code!=9001 ){\n          alert(list.result.data.message);\n          this.Back();\n          return;\n        } \n        list = list.result.data;\n        this.setState({CurrProblem : list.content})\n        this.setState({\n          isloading_problem : false\n        })\n        this.update_pagelog();\n      })\n  }\n  get_ip = () => {\n    this.setState({\n      isloading_ip : true\n    })\n    axios.get('https://www.cloudflare.com/cdn-cgi/trace').then(response => response.data)\n    .then((list) => {\n      console.log(list);\n      var count = 0 ;\n      var Ip = \"\";\n      for(var i =0;i<list.length;i++){\n        if(list[i] == '\\n'){count+=1;continue;}\n        if(count == 2) Ip+=list[i]; }\n      Ip = Ip.substring(3,Ip.length);\n      console.log(Ip);\n      this.setState({ ip : Ip });\n      this.setState({\n        isloading_ip : false\n      })\n      var v = this.getUrlVars('t','empty');\n      var token = v.t;\n      var refresh = v.r;\n      console.log(token);\n      console.log(refresh);\n      if(token != \"\"){\n        var Url = this.state.dataUrl+'?ip='+Ip+'&func=savecreds&token='+token+'&refresh='+refresh;\n        console.log(Url);\n        axios.get(Url).then(response => response.data);\n        window.location.href =\"http://localhost:3000/\" ;\n      }\n      this.reuseuser(Ip);\n    })\n    .catch(err => console.log(\"ip Axios err: \", err))\n  }\n  getUrlVars = () => {\n    var vars = {};\n    var count =0;\n    var val = window.location.href;\n    for(var i =0;i<val.length;i++){\n      if(val[i]=='/'){\n        count +=1;\n        if(count == 3){\n          val = val.substring(i+1,val.length);\n          break;\n        }\n      }\n    }\n    var token = \"\", refresh =\"\";\n    if(val.length >0){\n      for(var i =0;i<val.length;i++){\n        if(val[i]=='&'){\n          token = val.substring(2,i);\n          refresh = val.substring(i+3,val.length);\n          break;\n        }\n      }\n    }\n    return {t:token, r:refresh};\n  }\n  componentDidMount(){\n     this.get_ip();// gets ip, loads username, loads contest list\n  }\n\n  \n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}